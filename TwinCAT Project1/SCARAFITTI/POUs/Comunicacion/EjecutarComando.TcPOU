<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="EjecutarComando" Id="{44be1fb8-f127-407a-84ef-7ce9815273f2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK EjecutarComando
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	dalfa : REAL;
	dbeta : REAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT(GVL.Scarafitti.parada) THEN 
	IF GVL.comando_actual_tipo='G00' THEN
		///inicializar regimenes a cero
		GVL.Cilindro1.regimen:=0;
		GVL.Cilindro2.regimen:=0;
		IF NOT GVL.en_objetivo_alfa THEN
	IF GVL.alfa<GVL.alfa_sp THEN
		GVL.Cilindro1.regimen:=GVL.regimen_maximo;
		ELSE IF GVL.alfa>GVL.alfa_sp THEN
		GVL.Cilindro1.regimen:=-GVL.regimen_maximo;
	END_IF
END_IF
END_IF
IF NOT GVL.en_objetivo_beta THEN
	IF GVL.beta<GVL.beta_sp THEN
		GVL.Cilindro2.regimen:=GVL.regimen_maximo;
		ELSE IF GVL.beta>GVL.beta_sp THEN
		GVL.Cilindro2.regimen:=-GVL.regimen_maximo;
	END_IF
END_IF
END_IF
	ELSE IF GVL.comando_actual_tipo='G01' THEN
		///inicializar regimenes a cero
		GVL.Cilindro1.regimen:=0;
		GVL.Cilindro2.regimen:=0;
		IF NOT GVL.Scarafitti.en_objetivo THEN
		///determinar la diferencia con el objetivo en alfa y beta
		dalfa:=GVL.alfa_sp-GVL.alfa;
		dbeta:=GVL.beta_sp-GVL.beta;
		//si alfa está más lejos que beta
		IF ABS(dalfa)>ABS(dbeta) THEN
			IF NOT GVL.en_objetivo_alfa THEN
			IF dalfa > 0 THEN
				//mover cilindro 1 a velocidad máxima
				GVL.Cilindro1.regimen:=GVL.regimen_maximo;
				ELSE
					//o mínima
					GVL.Cilindro1.regimen:=-GVL.regimen_maximo;
				END_IF
			END_IF
				//y mover cilindro 2 a menor velocidad dbeta/dalfa
			IF NOT GVL.en_objetivo_beta THEN
				IF dbeta >0 THEN
					GVL.Cilindro2.regimen:=GVL.regimen_maximo*ABS(dbeta/dalfa);
					ELSE
						GVL.Cilindro2.regimen:=-GVL.regimen_maximo*ABS(dbeta/dalfa);
					END_IF
			END_IF

			// si beta está más lejos que alfa
			ELSE
			IF NOT GVL.en_objetivo_beta THEN
			IF dbeta > 0 THEN
				//mover cilindro 2 a velocidad máxima
				GVL.Cilindro2.regimen:=GVL.regimen_maximo;
				ELSE
					//o mínima
					GVL.Cilindro2.regimen:=-GVL.regimen_maximo;
				END_IF
			END_IF
				//y mover cilindro 1 a menor velocidad dalfa/dbeta
			IF NOT GVL.en_objetivo_alfa THEN
				IF dalfa >0 THEN
					GVL.Cilindro1.regimen:=GVL.regimen_maximo*ABS(dalfa/dbeta);
					ELSE
						GVL.Cilindro1.regimen:=-GVL.regimen_maximo*ABS(dalfa/dbeta);
					END_IF
			END_IF
			END_IF
		
		END_IF
	END_IF
	END_IF
				END_IF
	
//SI NO HE LLEGADO NO ACEPTO NUEVO COMANDO
IF NOT GVL.Scarafitti.en_objetivo THEN
	GVL.Scarafitti.ADSCOM_ready := FALSE;
	IO.string_out := CONCAT('Executing: ',gvl.comando_actual);
	ELSE
		GVL.Scarafitti.ADSCOM_ready := TRUE;
		IO.string_out := concat(concat(concat(CONCAT( 'Ready at Xc=', INT_TO_STRING(IO.Xc_ADS)), 'mm, Yc='),  INT_TO_STRING(IO.Yc_ADS)) , 'mm');
END_IF

//SI EL SETPOINT ES ERRONEO, AVISAR Y ABRIR CANAL
IF GVL.Scarafitti.error_objetivo THEN
		GVL.Scarafitti.ADSCOM_ready := TRUE;
		IO.string_out := 'Objetivo inválido, mandar nuevo comando';
END_IF

//SI EL COMANDO ES DESCONOCIDO, AVISAR Y ABRIR CANAL

IF GVL.comando_actual='Comando desconocido' THEN
			GVL.Scarafitti.ADSCOM_ready := TRUE;
		IO.string_out := 'Comando desconocido, mandar nuevo comando';
END_IF
	
	]]></ST>
    </Implementation>
    <LineIds Name="EjecutarComando">
      <LineId Id="10" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="108" Count="1" />
      <LineId Id="35" Count="1" />
      <LineId Id="38" Count="1" />
      <LineId Id="41" Count="5" />
      <LineId Id="48" Count="1" />
      <LineId Id="51" Count="2" />
      <LineId Id="33" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="120" Count="1" />
      <LineId Id="119" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="90" Count="1" />
      <LineId Id="95" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="101" Count="4" />
      <LineId Id="127" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="173" Count="15" />
      <LineId Id="172" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="139" Count="6" />
      <LineId Id="138" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="149" Count="1" />
      <LineId Id="148" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="155" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="55" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>