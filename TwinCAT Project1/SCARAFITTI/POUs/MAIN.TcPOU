<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="MAIN" Id="{d89af4a1-5c9c-4631-9fc2-66e77163c97b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	
fb_solveAlfaBeta:FB_SOLVEALFABETA;
fb_solveABCDE:FB_SOLVEABCDE;
fb_barridoXY:FB_BARRIDOXY;




Xc_test : LINT;
aux_ADS : INT;
Yc_test : LINT;

//test
nVar: UDINT;
//test
aux_UDINT : UDINT;
aux_REAL : REAL;

END_VAR



]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Blink
IO.blink := NOT(IO.blink);


//DÓNDE ESTOY?
///Resolver geometría
////SolveABCDE
fb_solveABCDE.alfa:=GVL.alfa;
fb_solveABCDE.beta:=GVL.beta;
fb_solveABCDE();
GVL.Xa:=(fb_solveABCDE.Xa);
GVL.Ya:=(fb_solveABCDE.Ya);
GVL.Xb:=(fb_solveABCDE.Xb);
GVL.Yb:=(fb_solveABCDE.Yb);
GVL.Xc:=(fb_solveABCDE.Xc);
IO.Xc_ADS:=REAL_TO_INT(GVL.Xc);
IO.Yc_ADS:=REAL_TO_INT(GVL.Yc);
GVL.Yc:=(fb_solveABCDE.Yc);
GVL.Xd:=(fb_solveABCDE.Xd);
GVL.Yd:=(fb_solveABCDE.Yd);
GVL.Xe:=(fb_solveABCDE.Xe);
GVL.Ye:=(fb_solveABCDE.Ye);
////Brazos
GVL.Xab:=(GVL.Xa+GVL.Xb)/2;
GVL.Yab:=(GVL.Ya+GVL.Yb)/2;
GVL.Xbc:=(GVL.Xc+GVL.Xb)/2;
GVL.Ybc:=(GVL.Yc+GVL.Yb)/2;
GVL.Xcd:=(GVL.Xc+GVL.Xd)/2;
GVL.Ycd:=(GVL.Yc+GVL.Yd)/2;
GVL.Xde:=(GVL.Xd+GVL.Xe)/2;
GVL.Yde:=(GVL.Yd+GVL.Ye)/2;

//ADÓNDE VOY?
///Consigna XcYc
////Barrido para test
//fb_barridoXY.speed:=2;
//fb_barridoXY();
//GVL.Xc_sp:=fb_barridoXY.Xbarrido;
//GVL.Yc_sp:=fb_barridoXY.Ybarrido;
////ADS Com
IF IO.ready THEN
	IF  LEFT(IO.string_in, 1)='G' THEN
		IF LEFT(IO.string_in, 3) ='G00' THEN
			IO.string_out:='comando G00 recibido';
			GVL.comando_actual:=IO.string_in;
			
		END_IF
		ELSE IF LEFT(IO.string_in, 3) ='G01' THEN
			IO.string_out:='comando G01 recibido';
			GVL.comando_actual:=IO.string_in;
	ELSE IO.string_out:='Comando desconocido';
END_IF
END_IF
END_IF

////Fija
GVL.Xc_sp:= Xc_test;
GVL.Yc_sp:= Yc_test;
///SolveAlfaBeta_sp
fb_solveAlfaBeta.x:=GVL.Xc_sp;
fb_solveAlfaBeta.y:=GVL.Yc_sp;
fb_solveAlfaBeta();
GVL.d1 :=fb_solveAlfaBeta.d1;
GVL.d2 :=fb_solveAlfaBeta.d2;
GVL.error := fb_solveAlfaBeta.error;
GVL.alfa_sp:=fb_solveAlfaBeta.alfa;
GVL.beta_sp:=fb_solveAlfaBeta.beta;

//HE LLEGADO?
GVL.en_objetivo_alfa:=(ABS(GVL.alfa-GVL.alfa_sp)<=GVL.deadband_angulo);
IF GVL.en_objetivo_alfa THEN
		IO.valv_alfa_mas:=FALSE;
		IO.valv_alfa_menos:=FALSE;
END_IF
GVL.en_objetivo_beta:=(ABS(GVL.beta-GVL.beta_sp)<=GVL.deadband_angulo);
IF GVL.en_objetivo_beta THEN
		IO.valv_beta_mas:=FALSE;
		IO.valv_beta_menos:=FALSE;
END_IF
GVL.en_objetivo := GVL.en_objetivo_alfa AND GVL.en_objetivo_beta;


//SI NO HE LLEGADO, ME MUEVO
///si no hay parada
IF NOT(GVL.parada) THEN 
IF NOT GVL.en_objetivo_alfa THEN
	IF GVL.alfa<GVL.alfa_sp THEN
		IO.valv_alfa_mas:=TRUE;
		IO.valv_alfa_menos:=FALSE;
		ELSE IF GVL.alfa>GVL.alfa_sp THEN
		IO.valv_alfa_mas:=FALSE;
		IO.valv_alfa_menos:=TRUE;
	END_IF
END_IF
END_IF
IF NOT GVL.en_objetivo_beta THEN
	IF GVL.beta<GVL.beta_sp THEN
		IO.valv_beta_mas:=TRUE;
		IO.valv_beta_menos:=FALSE;
		ELSE IF GVL.beta>GVL.beta_sp THEN
		IO.valv_beta_mas:=FALSE;
		IO.valv_beta_menos:=TRUE;
	END_IF
END_IF
END_IF
END_IF

//SI NO HE LLEGADO NO ACEPTO NUEVO OBJETIVO
IF NOT GVL.en_objetivo THEN
	IO.ready := FALSE;
	IO.string_out := 'Not ready: Moving...';
	ELSE
		IO.ready := TRUE;
		IO.string_out := concat(concat(concat(CONCAT( 'Ready at Xc=', INT_TO_STRING(IO.Xc_ADS)), 'mm, Yc='),  INT_TO_STRING(IO.Yc_ADS)) , 'mm');
END_IF]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="257" Count="1" />
      <LineId Id="401" Count="0" />
      <LineId Id="259" Count="0" />
      <LineId Id="265" Count="9" />
      <LineId Id="319" Count="0" />
      <LineId Id="449" Count="1" />
      <LineId Id="318" Count="0" />
      <LineId Id="275" Count="3" />
      <LineId Id="281" Count="8" />
      <LineId Id="341" Count="0" />
      <LineId Id="290" Count="7" />
      <LineId Id="483" Count="0" />
      <LineId Id="488" Count="0" />
      <LineId Id="490" Count="0" />
      <LineId Id="495" Count="0" />
      <LineId Id="504" Count="0" />
      <LineId Id="506" Count="0" />
      <LineId Id="496" Count="2" />
      <LineId Id="505" Count="0" />
      <LineId Id="489" Count="0" />
      <LineId Id="487" Count="0" />
      <LineId Id="500" Count="2" />
      <LineId Id="298" Count="0" />
      <LineId Id="342" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="303" Count="6" />
      <LineId Id="314" Count="1" />
      <LineId Id="343" Count="0" />
      <LineId Id="316" Count="0" />
      <LineId Id="345" Count="0" />
      <LineId Id="355" Count="1" />
      <LineId Id="358" Count="0" />
      <LineId Id="357" Count="0" />
      <LineId Id="346" Count="0" />
      <LineId Id="359" Count="2" />
      <LineId Id="348" Count="0" />
      <LineId Id="484" Count="1" />
      <LineId Id="362" Count="0" />
      <LineId Id="347" Count="0" />
      <LineId Id="398" Count="1" />
      <LineId Id="349" Count="1" />
      <LineId Id="352" Count="0" />
      <LineId Id="354" Count="0" />
      <LineId Id="364" Count="1" />
      <LineId Id="363" Count="0" />
      <LineId Id="353" Count="0" />
      <LineId Id="351" Count="0" />
      <LineId Id="375" Count="0" />
      <LineId Id="367" Count="7" />
      <LineId Id="366" Count="0" />
      <LineId Id="376" Count="0" />
      <LineId Id="400" Count="0" />
      <LineId Id="317" Count="0" />
      <LineId Id="129" Count="0" />
      <LineId Id="425" Count="0" />
      <LineId Id="474" Count="0" />
      <LineId Id="477" Count="2" />
      <LineId Id="481" Count="0" />
      <LineId Id="480" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>