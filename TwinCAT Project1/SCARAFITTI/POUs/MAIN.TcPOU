<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="MAIN" Id="{d89af4a1-5c9c-4631-9fc2-66e77163c97b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	
fb_solveAlfaBeta:FB_SOLVEALFABETA;
fb_solveABCDE:FB_SOLVEABCDE;
fb_barridoXY:FB_BARRIDOXY;
InterpretarComando : InterpretarComando;
EjecutarComando: EjecutarComando;




Xc_test : LINT;
aux_ADS : INT;
Yc_test : LINT;

//test
nVar: UDINT;
//test
aux_UDINT : UDINT;
aux_REAL : REAL;

END_VAR



]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Blink
IO.blink := NOT(IO.blink);


//DÓNDE ESTOY?
///comunicar ángulos
IO.alfa_deg:=GVL.alfa*180/GVL.Pi;
IO.beta_deg:=GVL.beta*180/GVL.Pi;
///Resolver geometría
////SolveABCDE
fb_solveABCDE.alfa:=GVL.alfa;
fb_solveABCDE.beta:=GVL.beta;
fb_solveABCDE();
GVL.Xa:=(fb_solveABCDE.Xa);
GVL.Ya:=(fb_solveABCDE.Ya);
GVL.Xb:=(fb_solveABCDE.Xb);
GVL.Yb:=(fb_solveABCDE.Yb);
GVL.Xc:=(fb_solveABCDE.Xc);
IO.Xc_ADS:=REAL_TO_INT(GVL.Xc);
IO.Yc_ADS:=REAL_TO_INT(GVL.Yc);
GVL.Yc:=(fb_solveABCDE.Yc);
GVL.Xd:=(fb_solveABCDE.Xd);
GVL.Yd:=(fb_solveABCDE.Yd);
GVL.Xe:=(fb_solveABCDE.Xe);
GVL.Ye:=(fb_solveABCDE.Ye);
////Brazos
GVL.Xab:=(GVL.Xa+GVL.Xb)/2;
GVL.Yab:=(GVL.Ya+GVL.Yb)/2;
GVL.Xbc:=(GVL.Xc+GVL.Xb)/2;
GVL.Ybc:=(GVL.Yc+GVL.Yb)/2;
GVL.Xcd:=(GVL.Xc+GVL.Xd)/2;
GVL.Ycd:=(GVL.Yc+GVL.Yd)/2;
GVL.Xde:=(GVL.Xd+GVL.Xe)/2;
GVL.Yde:=(GVL.Yd+GVL.Ye)/2;

//ADÓNDE VOY?
///Consigna XcYc
////Barrido para test
//fb_barridoXY.speed:=2;
//fb_barridoXY();
//GVL.Xc_sp:=fb_barridoXY.Xbarrido;
//GVL.Yc_sp:=fb_barridoXY.Ybarrido;
////ADS Com
	InterpretarComando();

////Fija
//GVL.Xc_sp:= Xc_test;
//GVL.Yc_sp:= Yc_test;
///SolveAlfaBeta_sp
fb_solveAlfaBeta.x:=GVL.Xc_sp;
fb_solveAlfaBeta.y:=GVL.Yc_sp;
fb_solveAlfaBeta();
GVL.d1 :=fb_solveAlfaBeta.d1;
GVL.d2 :=fb_solveAlfaBeta.d2;
GVL.error := fb_solveAlfaBeta.error;
GVL.alfa_sp:=MIN(MAX(gvl.pi/2,fb_solveAlfaBeta.alfa),GVL.Pi);
GVL.beta_sp:=MIN(MAX(0,fb_solveAlfaBeta.beta),GVL.Pi/2);

//HE LLEGADO?
GVL.en_objetivo_alfa:=(ABS(GVL.alfa-GVL.alfa_sp)<=GVL.deadband_angulo);
GVL.en_objetivo_beta:=(ABS(GVL.beta-GVL.beta_sp)<=GVL.deadband_angulo);
GVL.en_objetivo := GVL.en_objetivo_alfa AND GVL.en_objetivo_beta;


//SI NO HE LLEGADO, ME MUEVO
///si no hay parada
EjecutarComando();

]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="257" Count="1" />
      <LineId Id="401" Count="0" />
      <LineId Id="259" Count="0" />
      <LineId Id="265" Count="0" />
      <LineId Id="588" Count="2" />
      <LineId Id="266" Count="8" />
      <LineId Id="319" Count="0" />
      <LineId Id="449" Count="1" />
      <LineId Id="318" Count="0" />
      <LineId Id="275" Count="3" />
      <LineId Id="281" Count="8" />
      <LineId Id="341" Count="0" />
      <LineId Id="290" Count="7" />
      <LineId Id="534" Count="0" />
      <LineId Id="502" Count="0" />
      <LineId Id="298" Count="0" />
      <LineId Id="342" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="303" Count="6" />
      <LineId Id="314" Count="1" />
      <LineId Id="343" Count="0" />
      <LineId Id="316" Count="0" />
      <LineId Id="345" Count="1" />
      <LineId Id="484" Count="1" />
      <LineId Id="362" Count="0" />
      <LineId Id="347" Count="0" />
      <LineId Id="398" Count="0" />
      <LineId Id="560" Count="0" />
      <LineId Id="317" Count="0" />
      <LineId Id="480" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>